<Activity mc:Ignorable="sap sap2010" x:Class="ExploreMap" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System" xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_Map" Type="OutArgument(sxl:XElement)" />
    <x:Property Name="io_InputQueue" Type="InOutArgument(scg:Queue(x:Int64))" />
    <x:Property Name="io_OutputQueue" Type="InOutArgument(scg:Queue(x:Int64))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>828,1144</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ExploreMap_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg1:List x:TypeArguments="x:String" Capacity="23">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg1:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg1:List x:TypeArguments="AssemblyReference" Capacity="19">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </scg1:List>
  </TextExpression.ReferencesForImplementation>
  <StateMachine InitialState="{x:Reference __ReferenceID5}" sap2010:Annotation.AnnotationText="Description:&#xD;&#xA;State machine to control droid to explore the entire map. Using XML to keep track of the Map state. We can think of the maze as a tree. Each node is one step away from the starting node.&#xD;&#xA;&#xD;&#xA;Each node represents a map Tile. Tiles have the following properties:&#xD;&#xA;&lt;tile movement=&quot;&quot; x=&quot;&quot; y=&quot;&quot; backtrack=&quot;&quot; status=&quot;&quot;&gt;&lt;/tile&gt;&#xD;&#xA;&#xD;&#xA;Movement is the movement command taken to get to the tile (up:1, down:2, left:3, right:4).&#xD;&#xA;x is the x-coordinate&#xD;&#xA;y is the y-coordinate&#xD;&#xA;backtrack is the movement command to get back to the parent tile&#xD;&#xA;status is the status from the droid (wall:0, explored:1, oxygen:2)&#xD;&#xA;&#xD;&#xA;Pre-conditions:&#xD;&#xA;None&#xD;&#xA;&#xD;&#xA;Post-conditions:&#xD;&#xA;None" DisplayName="ExploreMap" sap:VirtualizedContainerService.HintSize="808,1084" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">350,0</av:Point>
        <x:Double x:Key="StateContainerWidth">774.5</x:Double>
        <x:Double x:Key="StateContainerHeight">766.5</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">377,75 377,105 375.6,105 375.6,111</av:PointCollection>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg1:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <State x:Name="__ReferenceID5" sap2010:Annotation.AnnotationText="Initialize the map with the starting position and the four possible child node for each direction." DisplayName="Initialize map" sap:VirtualizedContainerService.HintSize="288,118" sap2010:WorkflowViewState.IdRef="State_3">
      <State.Entry>
        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="338,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
          <ui:MultipleAssign.AssignOperations>
            <scg1:List x:TypeArguments="ui:AssignOperation" Capacity="4">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="sxl:XElement">[out_Map]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="sxl:XElement" xml:space="preserve">[&lt;tile movement="0" x="0" y="0" backtrack="0" status="1"&gt;
  &lt;tile movement="1" x="0" y="1" backtrack="2" status=""&gt;&lt;/tile&gt;
  &lt;tile movement="2" x="0" y="-1" backtrack="1" status=""&gt;&lt;/tile&gt;
  &lt;tile movement="3" x="-1" y="0" backtrack="4" status=""&gt;&lt;/tile&gt;
  &lt;tile movement="4" x="1" y="0" backtrack="3" status=""&gt;&lt;/tile&gt;
&lt;/tile&gt;]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="sxl:XElement">[CurrentTile]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="sxl:XElement">[out_Map]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg1:List>
          </ui:MultipleAssign.AssignOperations>
        </ui:MultipleAssign>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg1:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">246,111</av:Point>
          <av:Size x:Key="ShapeSize">288,118</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">254</x:Double>
          <x:Double x:Key="StateContainerHeight">25</x:Double>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg1:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Transitions>
        <Transition DisplayName="Initialized" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
              <av:PointCollection x:Key="ConnectorLocation">390,229 390,259 388.5,259 388.5,319.5</av:PointCollection>
            </scg1:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Find the next unexplored tile (status=&quot;&quot;)." DisplayName="Find NextTile" sap:VirtualizedContainerService.HintSize="231,103" sap2010:WorkflowViewState.IdRef="State_2">
              <State.Entry>
                <Sequence DisplayName="Next" sap:VirtualizedContainerService.HintSize="376,279" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg1:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Find the next tile to attempt to move to" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sxl:XElement">[NextTile]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sxl:XElement">[CurrentTile.Elements.Where(Function(x) x.@status = "").FirstOrDefault()]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg1:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke DrawMap workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Day15\DrawMap.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="sxl:XElement" x:Key="in_Map">[out_Map]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">273,319.5</av:Point>
                  <av:Size x:Key="ShapeSize">231,103</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">197</x:Double>
                  <x:Double x:Key="StateContainerHeight">25</x:Double>
                </scg1:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Transitions>
                <Transition DisplayName="Backtrack" sap:VirtualizedContainerService.HintSize="483,505" sap2010:WorkflowViewState.IdRef="Transition_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">273,396.75 243,396.75 243,408 137,408</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">57</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">56</x:Int32>
                    </scg1:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.Condition>[NextTile Is Nothing AndAlso Integer.Parse(CurrentTile.@backtrack) &lt;&gt; 0]</Transition.Condition>
                  <Transition.To>
                    <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="If no more places to move, backtrack." DisplayName="Backtrack" sap:VirtualizedContainerService.HintSize="134,118" sap2010:WorkflowViewState.IdRef="State_4">
                      <State.Entry>
                        <Sequence DisplayName="Backtrack" sap:VirtualizedContainerService.HintSize="526,857" sap2010:WorkflowViewState.IdRef="Sequence_1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg1:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <InvokeMethod DisplayName="Enqueue CT backtrack" sap:VirtualizedContainerService.HintSize="484,132" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Enqueue">
                            <InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="scg:Queue(x:Int64)">[io_InputQueue]</InArgument>
                            </InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="x:Int64">[Long.Parse(CurrentTile.@backtrack)]</InArgument>
                          </InvokeMethod>
                          <While DisplayName="Wait for output" sap:VirtualizedContainerService.HintSize="484,218" sap2010:WorkflowViewState.IdRef="While_1" Condition="[io_OutputQueue.Count &lt; 1]">
                            <Delay Duration="00:00:00.0010000" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
                          </While>
                          <If sap2010:Annotation.AnnotationText="This error shold never happen. If it does, then there is a bug in the program." Condition="[io_OutputQueue.Dequeue() = 0]" DisplayName="Check if backtrack was successful" sap:VirtualizedContainerService.HintSize="484,235" sap2010:WorkflowViewState.IdRef="If_1">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg1:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Throw Exception="[New Exception(&quot;Error. Robot got lost.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
                            </If.Then>
                          </If>
                          <Assign DisplayName="Set the current tile to the parent tile" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                            <Assign.To>
                              <OutArgument x:TypeArguments="sxl:XElement">[CurrentTile]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="sxl:XElement">[CurrentTile.Parent]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </State.Entry>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">3,319.5</av:Point>
                          <av:Size x:Key="ShapeSize">134,118</av:Size>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg1:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <State.Transitions>
                        <Transition DisplayName="Go to parent" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">137,331.3 167,331.3 167,340.1 273,340.1</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">4</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">13</x:Int32>
                            </scg1:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID0</x:Reference>
                          </Transition.To>
                        </Transition>
                      </State.Transitions>
                    </State>
                  </Transition.To>
                </Transition>
                <Transition DisplayName="Try Move" sap2010:WorkflowViewState.IdRef="Transition_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">307.65,422.5 307.65,489.5</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">11</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">10</x:Int32>
                    </scg1:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.Condition>[NextTile IsNot Nothing]</Transition.Condition>
                  <Transition.To>
                    <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="Try to move and get the response" DisplayName="Try Move" sap:VirtualizedContainerService.HintSize="231,88" sap2010:WorkflowViewState.IdRef="State_6">
                      <State.Entry>
                        <Sequence DisplayName="Try Move" sap:VirtualizedContainerService.HintSize="526,654" sap2010:WorkflowViewState.IdRef="Sequence_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg1:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <InvokeMethod DisplayName="Enqueue NT movement" sap:VirtualizedContainerService.HintSize="484,132" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Enqueue">
                            <InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="scg:Queue(x:Int64)">[io_InputQueue]</InArgument>
                            </InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="x:Int64">[Long.Parse(NextTile.@movement)]</InArgument>
                          </InvokeMethod>
                          <While DisplayName="Wait for output" sap:VirtualizedContainerService.HintSize="484,218" sap2010:WorkflowViewState.IdRef="While_2" Condition="[io_OutputQueue.Count &lt; 1]">
                            <Delay Duration="00:00:00.0010000" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delay_2" />
                          </While>
                          <InvokeMethod DisplayName="Set the @status attribute" sap:VirtualizedContainerService.HintSize="484,132" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="SetAttributeValue">
                            <InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="sxl:XElement">[NextTile]</InArgument>
                            </InvokeMethod.TargetObject>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg1:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <InArgument x:TypeArguments="sxl:XName">["status"]</InArgument>
                            <InArgument x:TypeArguments="x:Object">[io_OutputQueue.Dequeue()]</InArgument>
                          </InvokeMethod>
                        </Sequence>
                      </State.Entry>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">273,489.5</av:Point>
                          <av:Size x:Key="ShapeSize">231,88</av:Size>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Double x:Key="StateContainerWidth">197</x:Double>
                          <x:Double x:Key="StateContainerHeight">25</x:Double>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg1:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <State.Transitions>
                        <Transition DisplayName="Cannot move" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">446.25,489.5 446.25,422.5</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">58</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">59</x:Int32>
                            </scg1:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID0</x:Reference>
                          </Transition.To>
                          <Transition.Condition>[Integer.Parse(NextTile.@status) = 0]</Transition.Condition>
                        </Transition>
                        <Transition DisplayName="Move" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">307.65,577.5 307.65,607.5 306,607.5 306,649.5</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">11</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">10</x:Int32>
                            </scg1:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.Condition>[Integer.Parse(NextTile.@status) &lt;&gt; 0]</Transition.Condition>
                          <Transition.To>
                            <State x:Name="__ReferenceID4" sap2010:Annotation.AnnotationText="If move is successful, move robot." DisplayName="Move" sap:VirtualizedContainerService.HintSize="220,117" sap2010:WorkflowViewState.IdRef="State_5">
                              <State.Entry>
                                <Sequence DisplayName="Move" sap:VirtualizedContainerService.HintSize="526,1432" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg1:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Update the current tile" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="sxl:XElement">[CurrentTile]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="sxl:XElement">[NextTile]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <If Condition="[Integer.Parse(CurrentTile.@movement) &lt;&gt; 2]" DisplayName="Add Up" sap:VirtualizedContainerService.HintSize="484,280" sap2010:WorkflowViewState.IdRef="If_2">
                                    <If.Then>
                                      <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="238,132" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="sxl:XElement">[CurrentTile]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="sxl:XElement">[&lt;tile movement="1" x=&lt;%= CurrentTile.@x %&gt; y=&lt;%= Integer.Parse(CurrentTile.@y) + 1 %&gt; backtrack="2" status=""&gt;&lt;/tile&gt;]</InArgument>
                                      </InvokeMethod>
                                    </If.Then>
                                  </If>
                                  <If Condition="[Integer.Parse(CurrentTile.@movement) &lt;&gt; 1]" DisplayName="Add Down" sap:VirtualizedContainerService.HintSize="484,280" sap2010:WorkflowViewState.IdRef="If_3">
                                    <If.Then>
                                      <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="238,132" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="sxl:XElement">[CurrentTile]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="sxl:XElement">[&lt;tile movement="2" x=&lt;%= CurrentTile.@x %&gt; y=&lt;%= Integer.Parse(CurrentTile.@y) - 1 %&gt; backtrack="1" status=""&gt;&lt;/tile&gt;]</InArgument>
                                      </InvokeMethod>
                                    </If.Then>
                                  </If>
                                  <If Condition="[Integer.Parse(CurrentTile.@movement) &lt;&gt; 4]" DisplayName="Add Left" sap:VirtualizedContainerService.HintSize="484,280" sap2010:WorkflowViewState.IdRef="If_4">
                                    <If.Then>
                                      <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="238,132" sap2010:WorkflowViewState.IdRef="InvokeMethod_7" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="sxl:XElement">[CurrentTile]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="sxl:XElement">[&lt;tile movement="3" x=&lt;%= Integer.Parse(CurrentTile.@x) - 1 %&gt; y=&lt;%= CurrentTile.@y %&gt; backtrack="4" status=""&gt;&lt;/tile&gt;]</InArgument>
                                      </InvokeMethod>
                                    </If.Then>
                                  </If>
                                  <If Condition="[Integer.Parse(CurrentTile.@movement) &lt;&gt; 3]" DisplayName="Add Right" sap:VirtualizedContainerService.HintSize="484,280" sap2010:WorkflowViewState.IdRef="If_5">
                                    <If.Then>
                                      <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="238,132" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="sxl:XElement">[CurrentTile]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="sxl:XElement">[&lt;tile movement="4" x=&lt;%= Integer.Parse(CurrentTile.@x) + 1 %&gt; y=&lt;%= CurrentTile.@y %&gt; backtrack="3" status=""&gt;&lt;/tile&gt;]</InArgument>
                                      </InvokeMethod>
                                    </If.Then>
                                  </If>
                                </Sequence>
                              </State.Entry>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">273,649.5</av:Point>
                                  <av:Size x:Key="ShapeSize">220,117</av:Size>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Double x:Key="StateContainerWidth">186</x:Double>
                                  <x:Double x:Key="StateContainerHeight">38.632000000000176</x:Double>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg1:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <State.Transitions>
                                <Transition DisplayName="Next" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_6">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:PointCollection x:Key="ConnectorLocation">493,713.85 523,713.85 523,412.2 504,412.2</av:PointCollection>
                                      <x:Int32 x:Key="SrcConnectionPointIndex">40</x:Int32>
                                      <x:Int32 x:Key="DestConnectionPointIndex">68</x:Int32>
                                    </scg1:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Transition.To>
                                    <x:Reference>__ReferenceID0</x:Reference>
                                  </Transition.To>
                                </Transition>
                              </State.Transitions>
                            </State>
                          </Transition.To>
                        </Transition>
                      </State.Transitions>
                    </State>
                  </Transition.To>
                </Transition>
                <Transition DisplayName="Null" sap2010:WorkflowViewState.IdRef="Transition_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">504,334.95 534,334.95 534,396.45 573,396.45</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">8</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">49</x:Int32>
                    </scg1:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.Condition>[NextTile Is Nothing AndAlso Integer.Parse(CurrentTile.@backtrack) = 0]</Transition.Condition>
                  <Transition.To>
                    <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="Entire map has been explored." DisplayName="End" sap:VirtualizedContainerService.HintSize="134,103" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">573,329.5</av:Point>
                          <av:Size x:Key="ShapeSize">134,103</av:Size>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg1:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </State>
                  </Transition.To>
                </Transition>
              </State.Transitions>
            </State>
          </Transition.To>
        </Transition>
      </State.Transitions>
    </State>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="sxl:XElement" Name="CurrentTile" />
      <Variable x:TypeArguments="sxl:XElement" Name="NextTile" />
    </StateMachine.Variables>
  </StateMachine>
</Activity>