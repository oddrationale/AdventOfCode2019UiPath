<Activity mc:Ignorable="sap sap2010" x:Class="Solution15pt2" this:Solution15pt2.in_MapFilePath="Day15/map.xml" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_MapFilePath" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="out_Steps" Type="OutArgument(x:Int32)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>712,2545</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Solution15pt2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="42">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="18">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description:&#xD;&#xA;Find how many minutes it would take to fill the entire map with oxygen.&#xD;&#xA;&#xD;&#xA;Pre-conditions:&#xD;&#xA;None&#xD;&#xA;&#xD;&#xA;Post-conditions:&#xD;&#xA;None" DisplayName="Solution15pt2" sap:VirtualizedContainerService.HintSize="692,2485" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="MapExists" />
      <Variable x:TypeArguments="sxl:XDocument" Name="XDocMap" />
      <Variable x:TypeArguments="scg:List(sxl:XElement)" Name="Oxygens" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:PathExists DisplayName="Check if map.xml already exists" Exists="[MapExists]" sap:VirtualizedContainerService.HintSize="650,89" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[in_MapFilePath]" PathType="File" />
    <If Condition="[Not MapExists]" DisplayName="If map does not exist" sap:VirtualizedContainerService.HintSize="650,235" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke RenderMapToXml workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Day15\RenderMapToXml.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_MapFilePath">[in_MapFilePath]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
    </If>
    <ui:MultipleAssign DisplayName="Load Map" sap:VirtualizedContainerService.HintSize="650,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="sxl:XDocument">[XDocMap]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="sxl:XDocument">[XDocument.Load(in_MapFilePath)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="scg:List(sxl:XElement)">[Oxygens]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="scg:List(sxl:XElement)">[XDocMap.Descendants().Where(Function(x) x.@status = "2").ToList()]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <While DisplayName="Populate Oxygen throughout the system" sap:VirtualizedContainerService.HintSize="650,1530" sap2010:WorkflowViewState.IdRef="While_1" Condition="[Oxygens.Count &lt;&gt; 0]">
      <Sequence DisplayName="Fill Oxygen" sap:VirtualizedContainerService.HintSize="604,1372" sap2010:WorkflowViewState.IdRef="Sequence_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="562,984" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Oxygens]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="sxl:XElement">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sxl:XElement" Name="oxygen" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,850" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <InvokeMethod DisplayName="Set the @status attribute" sap:VirtualizedContainerService.HintSize="484,132" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="SetAttributeValue">
                  <InvokeMethod.TargetObject>
                    <InArgument x:TypeArguments="sxl:XElement">[oxygen]</InArgument>
                  </InvokeMethod.TargetObject>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <InArgument x:TypeArguments="sxl:XName">["status"]</InArgument>
                  <InArgument x:TypeArguments="x:Object">["3"]</InArgument>
                </InvokeMethod>
                <If Condition="[oxygen.Parent IsNot Nothing AndAlso oxygen.Parent.@status &lt;&gt; &quot;3&quot;]" DisplayName="If parent exists and does not already have oxygen" sap:VirtualizedContainerService.HintSize="484,280" sap2010:WorkflowViewState.IdRef="If_2">
                  <If.Then>
                    <InvokeMethod DisplayName="Set status to 2" sap:VirtualizedContainerService.HintSize="238,132" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="SetAttributeValue">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="sxl:XElement">[oxygen.Parent]</InArgument>
                      </InvokeMethod.TargetObject>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <InArgument x:TypeArguments="sxl:XName">["status"]</InArgument>
                      <InArgument x:TypeArguments="x:Object">["2"]</InArgument>
                    </InvokeMethod>
                  </If.Then>
                </If>
                <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="Fill the child elements, only fill empty (1) space" sap:VirtualizedContainerService.HintSize="484,266" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[oxygen.Elements().Where(Function(x) x.@status = &quot;1&quot;)]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="sxl:XElement">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sxl:XElement" Name="child" />
                      </ActivityAction.Argument>
                      <InvokeMethod DisplayName="Set status to 2" sap:VirtualizedContainerService.HintSize="238,132" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="SetAttributeValue">
                        <InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="sxl:XElement">[child]</InArgument>
                        </InvokeMethod.TargetObject>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <InArgument x:TypeArguments="sxl:XName">["status"]</InArgument>
                        <InArgument x:TypeArguments="x:Object">["2"]</InArgument>
                      </InvokeMethod>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
        <ui:MultipleAssign DisplayName="Increment and reset loop" sap:VirtualizedContainerService.HintSize="562,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="scg:List(sxl:XElement)">[Oxygens]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="scg:List(sxl:XElement)">[XDocMap.Descendants().Where(Function(x) x.@status = "2").ToList()]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:Int32">[out_Steps]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:Int32">[out_Steps + 1]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
        </ui:MultipleAssign>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke DrawMap workflow" sap:VirtualizedContainerService.HintSize="562,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Day15\DrawMap.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="sxl:XElement" x:Key="in_Map">[XDocMap.Root]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </Sequence>
    </While>
    <WriteLine sap2010:Annotation.AnnotationText="Subtract one because it also counts when converting the last tile from 2 to 3." DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="650,118" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;Steps: &quot; &amp; out_Steps - 1]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </WriteLine>
  </Sequence>
</Activity>