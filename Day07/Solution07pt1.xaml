<Activity mc:Ignorable="sap sap2010" x:Class="Solution07pt1" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1016,3039" sap2010:WorkflowViewState.IdRef="Solution07pt1_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="21">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="32">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description:&#xA;Run the Amps in Sequence and find the Phase Setting that produces the highest output to the Thrusters.&#xA;&#xA;Pre-conditions:&#xA;Input file exist and is valid Intcode.&#xA;&#xA;Post-conditions:&#xA;None" DisplayName="Solution07pt1" sap:VirtualizedContainerService.HintSize="604,2834" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="AmpSoftware" />
      <Variable x:TypeArguments="scg:List(s:Int32[])" Default="[New List(Of Int32())]" Name="PhaseSettingPermutations" />
      <Variable x:TypeArguments="x:Int64" Name="ToThrusters" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadTextFile Content="[AmpSoftware]" DisplayName="Get the Amplifier Controller Software" FileName="Day07\input.txt" sap:VirtualizedContainerService.HintSize="562,79" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetPermutations workflow" sap:VirtualizedContainerService.HintSize="562,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Day07\GetPermutations.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_Size">
          <Literal x:TypeArguments="x:Int32" Value="5" />
        </InArgument>
        <InArgument x:TypeArguments="s:Int32[]" x:Key="in_Array">
          <mva:VisualBasicValue x:TypeArguments="s:Int32[]" ExpressionText="{}{0,1,2,3,4}" />
        </InArgument>
        <InOutArgument x:TypeArguments="scg:List(s:Int32[])" x:Key="io_Arrays">
          <mva:VisualBasicReference x:TypeArguments="scg:List(s:Int32[])" ExpressionText="PhaseSettingPermutations" />
        </InOutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:ForEach x:TypeArguments="s:Int32[]" CurrentIndex="{x:Null}" DisplayName="For each Phase Setting permutation" sap:VirtualizedContainerService.HintSize="562,2238" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[PhaseSettingPermutations]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="s:Int32[]">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="s:Int32[]" Name="phaseSettings" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Run Amps" sap:VirtualizedContainerService.HintSize="526,2104" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg1:Queue(x:Int64)" Name="AmpA">
                <Variable.Default>
                  <mva:VisualBasicValue x:TypeArguments="scg1:Queue(x:Int64)" ExpressionText="New Queue(Of Int64)" />
                </Variable.Default>
              </Variable>
              <Variable x:TypeArguments="scg1:Queue(x:Int64)" Name="AmpB">
                <Variable.Default>
                  <mva:VisualBasicValue x:TypeArguments="scg1:Queue(x:Int64)" ExpressionText="New Queue(Of Int64)" />
                </Variable.Default>
              </Variable>
              <Variable x:TypeArguments="scg1:Queue(x:Int64)" Name="AmpC">
                <Variable.Default>
                  <mva:VisualBasicValue x:TypeArguments="scg1:Queue(x:Int64)" ExpressionText="New Queue(Of Int64)" />
                </Variable.Default>
              </Variable>
              <Variable x:TypeArguments="scg1:Queue(x:Int64)" Name="AmpD">
                <Variable.Default>
                  <mva:VisualBasicValue x:TypeArguments="scg1:Queue(x:Int64)" ExpressionText="New Queue(Of Int64)" />
                </Variable.Default>
              </Variable>
              <Variable x:TypeArguments="scg1:Queue(x:Int64)" Name="AmpE">
                <Variable.Default>
                  <mva:VisualBasicValue x:TypeArguments="scg1:Queue(x:Int64)" ExpressionText="New Queue(Of Int64)" />
                </Variable.Default>
              </Variable>
              <Variable x:TypeArguments="scg1:Queue(x:Int64)" Name="Thrusters">
                <Variable.Default>
                  <mva:VisualBasicValue x:TypeArguments="scg1:Queue(x:Int64)" ExpressionText="New Queue(Of Int64)" />
                </Variable.Default>
              </Variable>
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <InvokeMethod DisplayName="AmpA Phase Setting" sap:VirtualizedContainerService.HintSize="484,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Enqueue">
              <InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="scg1:Queue(x:Int64)">[AmpA]</InArgument>
              </InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="x:Int32">
                <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="phaseSettings(0)" />
              </InArgument>
            </InvokeMethod>
            <InvokeMethod DisplayName="AmpB Phase Setting" sap:VirtualizedContainerService.HintSize="484,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Enqueue">
              <InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="scg1:Queue(x:Int64)">[AmpB]</InArgument>
              </InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="x:Int32">
                <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="phaseSettings(1)" />
              </InArgument>
            </InvokeMethod>
            <InvokeMethod DisplayName="AmpC Phase Setting" sap:VirtualizedContainerService.HintSize="484,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Enqueue">
              <InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="scg1:Queue(x:Int64)">[AmpC]</InArgument>
              </InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="x:Int32">[phaseSettings(2)]</InArgument>
            </InvokeMethod>
            <InvokeMethod DisplayName="AmpD Phase Setting" sap:VirtualizedContainerService.HintSize="484,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="Enqueue">
              <InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="scg1:Queue(x:Int64)">[AmpD]</InArgument>
              </InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="x:Int32">[phaseSettings(3)]</InArgument>
            </InvokeMethod>
            <InvokeMethod DisplayName="AmpE Phase Setting" sap:VirtualizedContainerService.HintSize="484,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="Enqueue">
              <InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="scg1:Queue(x:Int64)">[AmpE]</InArgument>
              </InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="x:Int32">
                <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="phaseSettings(4)" />
              </InArgument>
            </InvokeMethod>
            <InvokeMethod DisplayName="Initialize AmpA w/ 0" sap:VirtualizedContainerService.HintSize="484,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="Enqueue">
              <InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="scg1:Queue(x:Int64)">[AmpA]</InArgument>
              </InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="x:Int32">
                <Literal x:TypeArguments="x:Int32" />
              </InArgument>
            </InvokeMethod>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Amp A" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Shared\RunIntcode.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_Intcode">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="AmpSoftware" />
                </InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="in_MemSize">
                  <Literal x:TypeArguments="x:Int32" Value="4096" />
                </InArgument>
                <InOutArgument x:TypeArguments="scg1:Queue(x:Int64)" x:Key="io_InputQueue">
                  <mva:VisualBasicReference x:TypeArguments="scg1:Queue(x:Int64)" ExpressionText="AmpA" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="scg1:Queue(x:Int64)" x:Key="io_OutputQueue">
                  <mva:VisualBasicReference x:TypeArguments="scg1:Queue(x:Int64)" ExpressionText="AmpB" />
                </InOutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_Intcode" />
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Amp B" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Shared\RunIntcode.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_Intcode">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="AmpSoftware" />
                </InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="in_MemSize">
                  <Literal x:TypeArguments="x:Int32" Value="4096" />
                </InArgument>
                <InOutArgument x:TypeArguments="scg1:Queue(x:Int64)" x:Key="io_InputQueue">
                  <mva:VisualBasicReference x:TypeArguments="scg1:Queue(x:Int64)" ExpressionText="AmpB" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="scg1:Queue(x:Int64)" x:Key="io_OutputQueue">
                  <mva:VisualBasicReference x:TypeArguments="scg1:Queue(x:Int64)" ExpressionText="AmpC" />
                </InOutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_Intcode" />
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Amp C" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Shared\RunIntcode.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_Intcode">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="AmpSoftware" />
                </InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="in_MemSize">
                  <Literal x:TypeArguments="x:Int32" Value="4096" />
                </InArgument>
                <InOutArgument x:TypeArguments="scg1:Queue(x:Int64)" x:Key="io_InputQueue">
                  <mva:VisualBasicReference x:TypeArguments="scg1:Queue(x:Int64)" ExpressionText="AmpC" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="scg1:Queue(x:Int64)" x:Key="io_OutputQueue">
                  <mva:VisualBasicReference x:TypeArguments="scg1:Queue(x:Int64)" ExpressionText="AmpD" />
                </InOutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_Intcode" />
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Amp D" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Shared\RunIntcode.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_Intcode">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="AmpSoftware" />
                </InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="in_MemSize">
                  <Literal x:TypeArguments="x:Int32" Value="4096" />
                </InArgument>
                <InOutArgument x:TypeArguments="scg1:Queue(x:Int64)" x:Key="io_InputQueue">
                  <mva:VisualBasicReference x:TypeArguments="scg1:Queue(x:Int64)" ExpressionText="AmpD" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="scg1:Queue(x:Int64)" x:Key="io_OutputQueue">
                  <mva:VisualBasicReference x:TypeArguments="scg1:Queue(x:Int64)" ExpressionText="AmpE" />
                </InOutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_Intcode" />
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Amp E" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Shared\RunIntcode.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_Intcode">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="AmpSoftware" />
                </InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="in_MemSize">
                  <Literal x:TypeArguments="x:Int32" Value="4096" />
                </InArgument>
                <InOutArgument x:TypeArguments="scg1:Queue(x:Int64)" x:Key="io_InputQueue">
                  <mva:VisualBasicReference x:TypeArguments="scg1:Queue(x:Int64)" ExpressionText="AmpE" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="scg1:Queue(x:Int64)" x:Key="io_OutputQueue">
                  <mva:VisualBasicReference x:TypeArguments="scg1:Queue(x:Int64)" ExpressionText="Thrusters" />
                </InOutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_Intcode" />
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <If Condition="[Thrusters.Peek() &gt; ToThrusters]" DisplayName="Keep the largest output" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Assign DisplayName="Signal to Thrusters" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int64">[ToThrusters]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int64">[Thrusters.Dequeue()]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="562,61" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;Signal to Thrusters: &quot; &amp; ToThrusters]" />
  </Sequence>
</Activity>