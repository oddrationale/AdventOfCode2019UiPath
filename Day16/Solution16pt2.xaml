<Activity mc:Ignorable="sap sap2010" x:Class="Solution16pt2" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="405,1262" sap2010:WorkflowViewState.IdRef="Solution16pt1_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="21">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="18">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description:&#xD;&#xA;Decode the real signal.&#xD;&#xA;&#xD;&#xA;This uses a trick that for the number halfway through the input will have zeros for the first half and ones for the second half. Afterwards, the zeros increase by one. Using this fact, assuming the offset is past the half-way mark, we only need to sum the numbers from the number to the end of the list.&#xD;&#xA;&#xD;&#xA;Takes about 5 minutes to run.&#xD;&#xA;&#xD;&#xA;Pre-conditions:&#xD;&#xA;Input file exists&#xD;&#xA;&#xD;&#xA;Post-conditions:&#xD;&#xA;None" DisplayName="Solution16pt2" sap:VirtualizedContainerService.HintSize="385,1202" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="Input" />
      <Variable x:TypeArguments="s:Int32[]" Name="InputSignal" />
      <Variable x:TypeArguments="x:Int32" Name="MessageOffset" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadTextFile Content="[Input]" DisplayName="Read Text File" FileName="Day16\input.txt" sap:VirtualizedContainerService.HintSize="343,132" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
    <ui:MultipleAssign sap2010:Annotation.AnnotationText="Get the message offset&#xD;&#xA;Convert input to Int array&#xD;&#xA;Repeat the signal 10,000 times." DisplayName="Initialize" sap:VirtualizedContainerService.HintSize="343,217" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Int32">[MessageOffset]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Int32">[Integer.Parse(Left(Input, 7))]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="s:Int32[]">[InputSignal]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="s:Int32[]">[Input.ToCharArray().Select(Function(c) Integer.Parse(c)).ToArray()]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="s:Int32[]">[InputSignal]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="s:Int32[]">[Enumerable.Repeat(InputSignal, 10000).SelectMany(Function(a) a).Skip(MessageOffset).ToArray()]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:MultipleAssign>
    <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="100 phases" sap:VirtualizedContainerService.HintSize="343,328" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Enumerable.Range(0, 100)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Int32">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Int32" Name="phase" />
          </ActivityAction.Argument>
          <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="Go in reverse" sap:VirtualizedContainerService.HintSize="307,194" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[Enumerable.Range(0, InputSignal.Length).Reverse()]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:Int32">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Int32" Name="i" />
                </ActivityAction.Argument>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[InputSignal(i)]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[(InputSignal(i) + If(i + 1 &lt; InputSignal.Length, InputSignal(i + 1), 0)) Mod 10]</InArgument>
                  </Assign.Value>
                </Assign>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="343,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;Final output: &quot; &amp; String.Join(&quot;&quot;, InputSignal.Take(8))]" />
  </Sequence>
</Activity>