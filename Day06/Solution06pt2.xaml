<Activity mc:Ignorable="sap sap2010" x:Class="Solution06pt2" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="396,1265" sap2010:WorkflowViewState.IdRef="Solution06pt2_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="21">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="32">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description:&#xD;&#xA;Find the minimal number of hops from my planet (YOU) to Santa's (SAN) planet.&#xD;&#xA;&#xD;&#xA;First get the list of planets in the path from me to COM (YOU2COM). Then get the list of planets in the path from Santa to COM (SAN2COM). The number of different planets on our lists is the answer.&#xD;&#xA;&#xD;&#xA;For example:&#xD;&#xA;YOU2COM = [K, J, E, D, C, B, COM]&#xD;&#xA;SAN2COM = [I, D, C, B, COM]&#xD;&#xA;YOU2SAN = [I, K, J, E] or 4 hops.&#xD;&#xA;&#xD;&#xA;Pre-conditions:&#xD;&#xA;Input file exists and has valid mapping of orbits&#xD;&#xA;&#xD;&#xA;Post-conditions:&#xD;&#xA;None" DisplayName="Solution06pt2" sap:VirtualizedContainerService.HintSize="376,1205" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="Input" />
      <Variable x:TypeArguments="scg:List(s:Tuple(x:String, x:String))" Name="OrbitMap" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="YOU2COM" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="SAN2COM" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="YOU2SAN" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadTextFile Content="[Input]" DisplayName="Read map data" FileName="Day06\input.txt" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
    <Assign sap2010:Annotation.AnnotationText="The OrbitMap is a List(Of Tuple(Of String, String)). The first item in the tuple is the Planet and the second item is the one that is Orbiting the first." DisplayName="Get OrbitMap" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(s:Tuple(x:String, x:String))">[OrbitMap]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(s:Tuple(x:String, x:String))">[(From orbit In Split(Input, vbLf) Select Tuple.Create(Split(orbit, ")").First(), Split(orbit, ")").Last())).ToList()]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Get YOU2COM" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Day06\GetPathToCOM.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:List(s:Tuple(x:String, x:String))" x:Key="in_OrbitMap">[OrbitMap]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Planet">YOU</InArgument>
        <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_PathToCOM">[YOU2COM]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Get SAN2COM" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Day06\GetPathToCOM.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:List(s:Tuple(x:String, x:String))" x:Key="in_OrbitMap">[OrbitMap]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Planet">SAN</InArgument>
        <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_PathToCOM">[SAN2COM]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign sap2010:Annotation.AnnotationText="Get the difference between the Union of me and Santa and the intersection between me and Santa." DisplayName="Get YOU2SAN" sap:VirtualizedContainerService.HintSize="334,117" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[YOU2SAN]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)">[YOU2COM.Union(SAN2COM).Except(YOU2COM.Intersect(SAN2COM)).ToList()]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;Tranfers: &quot; &amp; YOU2SAN.Count]" />
  </Sequence>
</Activity>